# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos-8"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.hostname= "k3s-worker1"
  #config.vm.disk :disk, size: "100GB", primary: true
  config.disksize.size = '100GB'

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  #config.vm.network "private_network", ip: "192.168.0.5"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network", ip: "192.168.0.8"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
	 vb.cpus = 4
     vb.memory = "4096"
	 vb.name = "k3s-worker1"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell",
    run: "always",
    inline: "ip route del default && ip route add default via 192.168.0.1 dev eth1"
  config.vm.provision "shell", inline: <<-SHELL
	 timedatectl set-timezone America/Asuncion && echo Timezone set America/Asuncion
     #yum update -y
	 curl -sfL https://get.k3s.io -o k3s.sh
	 chmod +x k3s.sh 
   export INSTALL_K3S_VERSION=v1.20.14-rc1+k3s2
	 export K3S_URL=https://192.168.0.5:6443
	 export INSTALL_K3S_EXEC="--node-ip 192.168.0.8 --node-external-ip 192.168.0.8 "
	 export K3S_TOKEN=K1061b1249b58a266290d61de11e47b1da504b02a9d0052187020c0a2dd4e6d0fb8::server:f8c91ac819589b7eb2e625a538b51462 
	 ./k3s.sh
	 yum install iscsi-initiator-utils -y 
  SHELL
end
